# Generated by Django 5.1.7 on 2025-04-19 04:49

import django.db.models.deletion
from django.db import migrations, models

def forward_func(apps, schema_editor):
    PatientRecord = apps.get_model('core', 'PatientRecord')
    Patient = apps.get_model('notifications', 'Patient')
    User = apps.get_model('auth', 'User')
    
    # For each record, find or create the corresponding Patient
    for record in PatientRecord.objects.all():
        try:
            patient = Patient.objects.get(user=record.patient)
            record.new_patient = patient
            record.save()
        except Patient.DoesNotExist:
            # If no patient exists, we'll need to delete the record
            record.delete()

def reverse_func(apps, schema_editor):
    PatientRecord = apps.get_model('core', 'PatientRecord')
    
    # Convert back to User foreign key
    for record in PatientRecord.objects.all():
        record.patient = record.new_patient.user
        record.save()

class Migration(migrations.Migration):

    dependencies = [
        ('notifications', '0017_appointment_completed'),
        ('core', '0006_fitbitvitals_body_temp_fitbitvitals_sleep_minutes_and_more'),
    ]

    operations = [
        # First add a temporary field
        migrations.AddField(
            model_name='patientrecord',
            name='new_patient',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='notifications.patient'),
        ),
        # Run the data migration
        migrations.RunPython(forward_func, reverse_func),
        # Remove the old patient field
        migrations.RemoveField(
            model_name='patientrecord',
            name='patient',
        ),
        # Rename new_patient to patient
        migrations.RenameField(
            model_name='patientrecord',
            old_name='new_patient',
            new_name='patient',
        ),
        # Update the related_name
        migrations.AlterField(
            model_name='patientrecord',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_records', to='notifications.patient'),
        ),
    ]
